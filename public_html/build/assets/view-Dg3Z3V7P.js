let e=null;async function c(){let t=$("#objectId").val();if(t)try{let{data:a}=await ajax({url:`${API_BASEURL}/partners/fetch/${t}`,type:"GET"});e=a}catch({error:a}){await Swal.fire(a.responseJSON.message,"","error"),location="/partners"}}function l(){if($("#code").html(e.user.code),$("#firstName").html(e.user.first_name),$("#lastName").html(e.user.last_name),$("#phoneNumber").html(e.user.phone_number),$("#email").html(e.user.email),$("#picture").html(`<img src="${getUploadUrl(e.user.picture)}" width="360">`),$("#idCardNumber").html(e.idcard_number),$("#idCardPicture").html(`<img src="${getUploadUrl(e.idcard_picture)}" width="360">`),$("#address").html(e.address),$("#companyName").html(e.company.name),$("#tin").html(e.company.tin),$("#status").html({pending:'<span class="badge rounded-pill bg-secondary">En attente</span>',enabled:'<span class="badge rounded-pill bg-success">Actif</span>',disabled:'<span class="badge rounded-pill bg-secondary">Inactif</span>',rejected:'<span class="badge rounded-pill bg-danger">Rejeté</span>'}[e.user.status]),$("#reviewedAt").html(e.user.reviewed_at),$("#feedback").html(e.user.feedback),!e.is_master)$("#opTypesCard").hide();else{let t=$("#opTypesTable tbody");for(const a of e.master.operation_types){let s=$(`
        <tr>
          <td>
            ${a.operation_type.name}
            ${a.card_type?`(${a.card_type})`:""}
          </td>
          <td>
            ${a.has_commissions?'<span class="badge rounded-pill bg-success has-commissions">Actif</span>':'<span class="badge rounded-pill bg-secondary has-commissions">Inactif</span>'}
          </td>
          <td>
            ${a.has_commissions?`
                <button type="button" class="btn btn-sm btn-outline-danger disable-status-commissions">
                  <i class="fas me-2 fa-ban"></i> Désactiver les commissions
                </button>`:`
                <button type="button" class="btn btn-sm btn-outline-success enable-status-commissions">
                  <i class="fas me-2 fa-check"></i> Activer les commissions
                </button>`}
          </td>
        </tr>
      `).data({operationType:a.operation_type,cardType:a.card_type});t.append(s)}}}async function d(){try{let t=await Swal.fire({title:`Voulez-vous vraiment valider le compte ${e.user.code}?`,text:"Cette opération est irréversible",input:"textarea",inputPlaceholder:"Vous pouvez laisser un feedback ici...",icon:"question",showCancelButton:!0,confirmButtonText:"Oui",cancelButtonText:"Non"});if(!t.isConfirmed)throw{};swalLoading();let{data:a}=await ajax({url:`${API_BASEURL}/partners/approve/${e.id}`,type:"POST",data:{feedback:t.value}});Toast.fire(a.message,"","success"),location.reload()}catch({error:t}){Swal.fire(t.responseJSON.message,"","error")}}async function u(){try{let t=await Swal.fire({title:`Voulez-vous vraiment rejeter le compte ${e.user.code}?`,text:"Cette opération est irreversible",input:"textarea",inputPlaceholder:"Vous pouvez laisser un feedback ici...",icon:"question",showCancelButton:!0,confirmButtonText:"Oui",cancelButtonText:"Non"});if(!t.isConfirmed)throw{};swalLoading();let{data:a}=await ajax({url:`${API_BASEURL}/partners/reject/${e.id}`,type:"POST",data:{feedback:t.value}});Toast.fire(a.message,"","success"),location.reload()}catch({error:t}){Swal.fire(t.responseJSON.message,"","error")}}async function o(t){try{if(!(await Swal.fire({title:`Voulez-vous vraiment ${t==="enabled"?"activer":"désactiver"} le compte ${e.user.code}?`,icon:"question",showCancelButton:!0,confirmButtonText:"Oui",cancelButtonText:"Non"})).isConfirmed)throw{};swalLoading();let{data:s}=await ajax({url:`${API_BASEURL}/partners/change-status/${e.id}`,type:"POST",data:{status:t}});Toast.fire(s.message,"","success"),location.reload()}catch({error:a}){Swal.fire(a.responseJSON.message,"","error")}}async function r(t,a,s){try{if(!(await Swal.fire({title:`
        Voulez-vous vraiment
        ${s==="enabled"?"activer":"désactiver"}
        les commissions du compte ${e.user.code} pour
        ${t.name}${a?` (${a})`:""}?
      `,icon:"question",showCancelButton:!0,confirmButtonText:"Oui",cancelButtonText:"Non"})).isConfirmed)throw{};swalLoading();let{data:n}=await ajax({url:`${API_BASEURL}/partners/change-commissions-status/${e.id}`,type:"POST",data:{operation_type_id:t.id,card_type:a,status:s}});Toast.fire(n.message,"","success"),location.reload()}catch({error:i}){console.log(i),Swal.fire(i.responseJSON.message,"","error")}}async function p(){try{if(!(await Swal.fire({title:`Voulez-vous vraiment supprimer le compte ${e.user.code}?`,text:"Cette opération est irreversible",icon:"question",showCancelButton:!0,confirmButtonText:"Oui",cancelButtonText:"Non"})).isConfirmed)throw{};swalLoading();let{data:a}=await ajax({url:`${API_BASEURL}/partners/delete/${e.id}`,type:"POST"});Toast.fire(a.message,"","success"),location="/partners"}catch({error:t}){Swal.fire(t.responseJSON.message,"","error")}}window.render=async function(){await c(),setTitle(e.is_master?`Détails du partenaire ${e.user.code}`:`Détails de la boutique ${e.user.code}`),$("#titleOpTypes").html(`Statut des commissions du partenaire ${e.user.code}`),l(),$("#opTypesTable").on("click",".enable-status-commissions",function(t){r($(this).closest("tr").data("operationType"),$(this).closest("tr").data("cardType"),"enabled")}),$("#opTypesTable").on("click",".disable-status-commissions",function(t){r($(this).closest("tr").data("operationType"),$(this).closest("tr").data("cardType"),"disabled")}),$("#edit").click(function(t){location=`/partners/${e.id}/edit`}),$("#approve").click(function(t){d()}),$("#reject").click(function(t){u()}),$("#enable").click(function(t){o("enabled")}),$("#disable").click(function(t){o("disabled")}),$("#delete").click(function(t){p()}),e.user.status!=="pending"&&($("#approve").hide(),$("#reject").hide()),e.user.status!=="disabled"&&$("#enable").hide(),e.user.status!=="enabled"&&$("#disable").hide()};
