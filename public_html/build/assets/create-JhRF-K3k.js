let r=null;async function d(){let e=$("#objectId").val();if(e)try{let{data:o}=await ajax({url:`${API_BASEURL}/decoders/fetch/${e}`,type:"GET"});r=o}catch({error:o}){await Swal.fire(o.responseJSON.message,"","error"),location="/decoders"}}function a(){window.clearDecoderAddingTypes(),$(".is-invalid").removeClass("is-invalid")}function t(){$("#type").val("one").change().parent().hide(),$("#decoderNumber").val(r.decoder_number)}async function c(){swalLoading();try{let{data:e}=await ajax({url:`${API_BASEURL}/decoders/store`,type:"POST",data:window.fillDecoderAddingTypes({})});Toast.fire(e.message,"","success"),a()}catch({error:e}){console.log(e),e.responseJSON.errors&&Swal.close(),showErrors(e.responseJSON,window.fillDecoderAddingErrorFields({}))}}async function s(){swalLoading();try{let{data:e}=await ajax({url:`${API_BASEURL}/decoders/update/${r.id}`,type:"POST",data:{decoder_number:$("#decoderNumber").val()}});Toast.fire(e.message,"","success"),location=`/decoders/${r.id}`}catch({error:e}){console.log(e),viewErrors(e.responseJSON.errors)}}window.render=async function(){await d(),initDecoderAddingTypes(),setTitle(r?`Édition du décodeur ${r.decoder_number}`:"Nouveaux décodeurs"),r?t():a(),$("#form").submit(function(e){e.preventDefault(),r?s():c()})};
